@inherits FortyFingers.DnnMassManipulate.Components._40FingersLib.FfRazorViewPageOfT<FortyFingers.DnnMassManipulate.ManipulatorModules.HashPasswords.HashPasswordsModel>
@{
}
<div class="dnnFormMessage dnnFormInfo">
    <p>Use this module to hash your user's passwords that are still encrypted, after you have set the encryption type from encrypted to hashed in web.config.</p>
    <p>If you change that setting, DNN/asp.net will store newly saved passwords in the new format, but the older ones will stay the same. With this function you can force all passwords to be actually hashed in stead of encrypted.</p>
</div>
<div class="dnnForm ffmm-skins" id="ffmmHashPasswordsForm">
    <h2>Hash Passwords</h2>
    <ul class="dnnActions dnnClear">
        <li><input type="button" class="dnnSecondaryAction" onclick="getPasswords();" value="List encrypted passwords" /></li>
        <li><input type="button" class="dnnPrimaryAction" onclick="doHashPasswords();" value="Store encrypted passwords" /></li>
    </ul>
    <fieldset class="ddnClear">
        <div class="dnnFormItem">
            <label class="dnnLabel">Retrieved passwords</label>
            <textarea name="encryptedPasswords" style="height:400px;width:500px;" class="dnnFormInput"></textarea>
        </div>
    </fieldset>

    <section class="ffmm-logging">
        <h3>Logging:</h3>
        <div id="ffmmHashPasswordsLog"></div>
    </section>
</div>
<script>
    function getPasswords() {
        var service = FF.getService("40FDMM", "HashPasswords", @Model.Context.Module.ModuleID, @Model.Context.Portal.ActiveTab.TabID);
        var postData = {};

        FF.postFormFieldsObject(service,
            'GetEncryptedPasswords',
            postData,
            function(data) {
                // onDone
                let oData = FF.parseJSON(data);
                $("#ffmmHashPasswordsLog").html(oData.Log);
                $("#ffmmHashPasswordsForm textarea[name='encryptedPasswords']").val(JSON.stringify(oData.Passwords, null, 2));
            },
            function(responseText) {
                // onFail
                $("#ffmmHashPasswordsLog").append(postData.TabName + " failed with message " + responseText + "<br/>");
            });
    }
    function doHashPasswords() {
        var service = FF.getService("40FDMM", "HashPasswords", @Model.Context.Module.ModuleID, @Model.Context.Portal.ActiveTab.TabID);
        var postData = FF.parseJSON($("#ffmmHashPasswordsForm textarea[name='encryptedPasswords']").val());

        FF.postFormFieldsObject(service,
            "HashEncryptedPasswords",
            postData,
            function(data) {
                // onDone
                $("#ffmmHashPasswordsLog").html(data);
            },
            function(responseText) {
                // onFail
                $("#ffmmHashPasswordsLog").append(postData.TabName + " failed with message " + responseText + "<br/>");
            });
    }

</script>